/**
 * @fileoverview gRPC-Web generated client stub for gaintain
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.21.12
// source: set.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as set_pb from './set_pb';


export class SetServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorListSets = new grpcWeb.MethodDescriptor(
    '/gaintain.SetService/ListSets',
    grpcWeb.MethodType.UNARY,
    set_pb.SetsRequest,
    set_pb.Sets,
    (request: set_pb.SetsRequest) => {
      return request.serializeBinary();
    },
    set_pb.Sets.deserializeBinary
  );

  listSets(
    request: set_pb.SetsRequest,
    metadata: grpcWeb.Metadata | null): Promise<set_pb.Sets>;

  listSets(
    request: set_pb.SetsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: set_pb.Sets) => void): grpcWeb.ClientReadableStream<set_pb.Sets>;

  listSets(
    request: set_pb.SetsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: set_pb.Sets) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gaintain.SetService/ListSets',
        request,
        metadata || {},
        this.methodDescriptorListSets,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gaintain.SetService/ListSets',
    request,
    metadata || {},
    this.methodDescriptorListSets);
  }

  methodDescriptorCreateSet = new grpcWeb.MethodDescriptor(
    '/gaintain.SetService/CreateSet',
    grpcWeb.MethodType.UNARY,
    set_pb.NewSet,
    set_pb.Set,
    (request: set_pb.NewSet) => {
      return request.serializeBinary();
    },
    set_pb.Set.deserializeBinary
  );

  createSet(
    request: set_pb.NewSet,
    metadata: grpcWeb.Metadata | null): Promise<set_pb.Set>;

  createSet(
    request: set_pb.NewSet,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: set_pb.Set) => void): grpcWeb.ClientReadableStream<set_pb.Set>;

  createSet(
    request: set_pb.NewSet,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: set_pb.Set) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gaintain.SetService/CreateSet',
        request,
        metadata || {},
        this.methodDescriptorCreateSet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gaintain.SetService/CreateSet',
    request,
    metadata || {},
    this.methodDescriptorCreateSet);
  }

  methodDescriptorGetSet = new grpcWeb.MethodDescriptor(
    '/gaintain.SetService/GetSet',
    grpcWeb.MethodType.UNARY,
    set_pb.SetRequest,
    set_pb.Set,
    (request: set_pb.SetRequest) => {
      return request.serializeBinary();
    },
    set_pb.Set.deserializeBinary
  );

  getSet(
    request: set_pb.SetRequest,
    metadata: grpcWeb.Metadata | null): Promise<set_pb.Set>;

  getSet(
    request: set_pb.SetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: set_pb.Set) => void): grpcWeb.ClientReadableStream<set_pb.Set>;

  getSet(
    request: set_pb.SetRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: set_pb.Set) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gaintain.SetService/GetSet',
        request,
        metadata || {},
        this.methodDescriptorGetSet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gaintain.SetService/GetSet',
    request,
    metadata || {},
    this.methodDescriptorGetSet);
  }

  methodDescriptorUpdateSet = new grpcWeb.MethodDescriptor(
    '/gaintain.SetService/UpdateSet',
    grpcWeb.MethodType.UNARY,
    set_pb.Set,
    set_pb.Set,
    (request: set_pb.Set) => {
      return request.serializeBinary();
    },
    set_pb.Set.deserializeBinary
  );

  updateSet(
    request: set_pb.Set,
    metadata: grpcWeb.Metadata | null): Promise<set_pb.Set>;

  updateSet(
    request: set_pb.Set,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: set_pb.Set) => void): grpcWeb.ClientReadableStream<set_pb.Set>;

  updateSet(
    request: set_pb.Set,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: set_pb.Set) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gaintain.SetService/UpdateSet',
        request,
        metadata || {},
        this.methodDescriptorUpdateSet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gaintain.SetService/UpdateSet',
    request,
    metadata || {},
    this.methodDescriptorUpdateSet);
  }

  methodDescriptorDeleteSet = new grpcWeb.MethodDescriptor(
    '/gaintain.SetService/DeleteSet',
    grpcWeb.MethodType.UNARY,
    set_pb.SetRequest,
    set_pb.Set,
    (request: set_pb.SetRequest) => {
      return request.serializeBinary();
    },
    set_pb.Set.deserializeBinary
  );

  deleteSet(
    request: set_pb.SetRequest,
    metadata: grpcWeb.Metadata | null): Promise<set_pb.Set>;

  deleteSet(
    request: set_pb.SetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: set_pb.Set) => void): grpcWeb.ClientReadableStream<set_pb.Set>;

  deleteSet(
    request: set_pb.SetRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: set_pb.Set) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/gaintain.SetService/DeleteSet',
        request,
        metadata || {},
        this.methodDescriptorDeleteSet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/gaintain.SetService/DeleteSet',
    request,
    metadata || {},
    this.methodDescriptorDeleteSet);
  }

}

