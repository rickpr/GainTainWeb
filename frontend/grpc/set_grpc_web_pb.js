/**
 * @fileoverview gRPC-Web generated client stub for gaintain
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.21.12
// source: set.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');

const proto = {};
proto.gaintain = require('./set_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.gaintain.SetServiceClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.gaintain.SetServicePromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.gaintain.SetsRequest,
 *   !proto.gaintain.Sets>}
 */
const methodDescriptor_SetService_ListSets = new grpc.web.MethodDescriptor(
  '/gaintain.SetService/ListSets',
  grpc.web.MethodType.UNARY,
  proto.gaintain.SetsRequest,
  proto.gaintain.Sets,
  /**
   * @param {!proto.gaintain.SetsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.gaintain.Sets.deserializeBinary
);


/**
 * @param {!proto.gaintain.SetsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.gaintain.Sets)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.gaintain.Sets>|undefined}
 *     The XHR Node Readable Stream
 */
proto.gaintain.SetServiceClient.prototype.listSets =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/gaintain.SetService/ListSets',
      request,
      metadata || {},
      methodDescriptor_SetService_ListSets,
      callback);
};


/**
 * @param {!proto.gaintain.SetsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.gaintain.Sets>}
 *     Promise that resolves to the response
 */
proto.gaintain.SetServicePromiseClient.prototype.listSets =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/gaintain.SetService/ListSets',
      request,
      metadata || {},
      methodDescriptor_SetService_ListSets);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.gaintain.NewSet,
 *   !proto.gaintain.Set>}
 */
const methodDescriptor_SetService_CreateSet = new grpc.web.MethodDescriptor(
  '/gaintain.SetService/CreateSet',
  grpc.web.MethodType.UNARY,
  proto.gaintain.NewSet,
  proto.gaintain.Set,
  /**
   * @param {!proto.gaintain.NewSet} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.gaintain.Set.deserializeBinary
);


/**
 * @param {!proto.gaintain.NewSet} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.gaintain.Set)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.gaintain.Set>|undefined}
 *     The XHR Node Readable Stream
 */
proto.gaintain.SetServiceClient.prototype.createSet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/gaintain.SetService/CreateSet',
      request,
      metadata || {},
      methodDescriptor_SetService_CreateSet,
      callback);
};


/**
 * @param {!proto.gaintain.NewSet} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.gaintain.Set>}
 *     Promise that resolves to the response
 */
proto.gaintain.SetServicePromiseClient.prototype.createSet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/gaintain.SetService/CreateSet',
      request,
      metadata || {},
      methodDescriptor_SetService_CreateSet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.gaintain.SetRequest,
 *   !proto.gaintain.Set>}
 */
const methodDescriptor_SetService_GetSet = new grpc.web.MethodDescriptor(
  '/gaintain.SetService/GetSet',
  grpc.web.MethodType.UNARY,
  proto.gaintain.SetRequest,
  proto.gaintain.Set,
  /**
   * @param {!proto.gaintain.SetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.gaintain.Set.deserializeBinary
);


/**
 * @param {!proto.gaintain.SetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.gaintain.Set)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.gaintain.Set>|undefined}
 *     The XHR Node Readable Stream
 */
proto.gaintain.SetServiceClient.prototype.getSet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/gaintain.SetService/GetSet',
      request,
      metadata || {},
      methodDescriptor_SetService_GetSet,
      callback);
};


/**
 * @param {!proto.gaintain.SetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.gaintain.Set>}
 *     Promise that resolves to the response
 */
proto.gaintain.SetServicePromiseClient.prototype.getSet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/gaintain.SetService/GetSet',
      request,
      metadata || {},
      methodDescriptor_SetService_GetSet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.gaintain.Set,
 *   !proto.gaintain.Set>}
 */
const methodDescriptor_SetService_UpdateSet = new grpc.web.MethodDescriptor(
  '/gaintain.SetService/UpdateSet',
  grpc.web.MethodType.UNARY,
  proto.gaintain.Set,
  proto.gaintain.Set,
  /**
   * @param {!proto.gaintain.Set} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.gaintain.Set.deserializeBinary
);


/**
 * @param {!proto.gaintain.Set} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.gaintain.Set)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.gaintain.Set>|undefined}
 *     The XHR Node Readable Stream
 */
proto.gaintain.SetServiceClient.prototype.updateSet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/gaintain.SetService/UpdateSet',
      request,
      metadata || {},
      methodDescriptor_SetService_UpdateSet,
      callback);
};


/**
 * @param {!proto.gaintain.Set} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.gaintain.Set>}
 *     Promise that resolves to the response
 */
proto.gaintain.SetServicePromiseClient.prototype.updateSet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/gaintain.SetService/UpdateSet',
      request,
      metadata || {},
      methodDescriptor_SetService_UpdateSet);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.gaintain.SetRequest,
 *   !proto.gaintain.Set>}
 */
const methodDescriptor_SetService_DeleteSet = new grpc.web.MethodDescriptor(
  '/gaintain.SetService/DeleteSet',
  grpc.web.MethodType.UNARY,
  proto.gaintain.SetRequest,
  proto.gaintain.Set,
  /**
   * @param {!proto.gaintain.SetRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.gaintain.Set.deserializeBinary
);


/**
 * @param {!proto.gaintain.SetRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.gaintain.Set)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.gaintain.Set>|undefined}
 *     The XHR Node Readable Stream
 */
proto.gaintain.SetServiceClient.prototype.deleteSet =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/gaintain.SetService/DeleteSet',
      request,
      metadata || {},
      methodDescriptor_SetService_DeleteSet,
      callback);
};


/**
 * @param {!proto.gaintain.SetRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.gaintain.Set>}
 *     Promise that resolves to the response
 */
proto.gaintain.SetServicePromiseClient.prototype.deleteSet =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/gaintain.SetService/DeleteSet',
      request,
      metadata || {},
      methodDescriptor_SetService_DeleteSet);
};


module.exports = proto.gaintain;

